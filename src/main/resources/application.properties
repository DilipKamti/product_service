# App info
spring.application.name=product-service
server.port=${SERVER_PORT:8083}

# MySQL DB config with environment variable fallback
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/productdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:1234}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate dialect with env override (defaults to MySQL8)
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQL8Dialect}

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Actuator settings
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Relience4j config
#resilience4j.circuitbreaker.instances.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.default.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.default.automaticTransitionFromOpenToHalfOpenEnabled=true

#resilience4j.timelimiter.configs.default.timeout-duration=3s


# Eureka Discovery Client config with fallback
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

#External calls
inventory.service.base-url:${INVENTORY_SERVICE_BASE:http://inventory-service:8084}
jwt.secret=${JWT_SECRET:MySuperSecretKeyForJwtToken1234567890}

# Kafka bootstrap server
spring.kafka.bootstrap-servers=localhost:9092


# Consumer configuration
spring.kafka.consumer.group-id=product-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Custom topic properties
kafka.topic.partitions=3
kafka.topic.replicas=1


# Logging configuration
logging.level.com.netflix.discovery=trace
logging.level.org.springframework.cloud.netflix.eureka=trace
logging.level.com.netflix.eureka=trace


